<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.infonet.dao.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.jy.infonet.entity.Reply">
    <id column="reply_id" jdbcType="INTEGER" property="replyId" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="reply_content" jdbcType="VARCHAR" property="replyContent" />
    <result column="reply_date" jdbcType="TIMESTAMP" property="replyDate" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <resultMap id="WithUserResultMap" type="com.jy.infonet.entity.Reply">
    <id column="reply_id" jdbcType="INTEGER" property="replyId" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="reply_content" jdbcType="VARCHAR" property="replyContent" />
    <result column="reply_date" jdbcType="TIMESTAMP" property="replyDate" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <association property="netuser" javaType="com.jy.infonet.entity.Netuser">
      <id property="userId" column="user_id" />
      <result property="userName" column="user_name"/>
      <result property="userSex" column="user_sex"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and r.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reply_id, comment_id, reply_content, reply_date, user_id
  </sql>
  <sql id="WithUser_Column_List">
    r.reply_id, r.comment_id, r.reply_content, r.reply_date, r.user_id,
    u.user_name,u.user_sex
  </sql>
  <select id="selectByExample" parameterType="com.jy.infonet.entity.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithUser" parameterType="com.jy.infonet.entity.ReplyExample" resultMap="WithUserResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithUser_Column_List" />
    from reply r
    left join netuser u on r.user_id=u.user_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithUser" parameterType="java.lang.Integer" resultMap="WithUserResultMap">
    select
    <include refid="WithUser_Column_List" />
    from reply r
    left join netuser u on r.user_id=u.user_id
    where reply_id = #{replyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jy.infonet.entity.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jy.infonet.entity.Reply">
    insert into reply (reply_id, comment_id, reply_content, 
      reply_date, user_id)
    values (#{replyId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{replyContent,jdbcType=VARCHAR}, 
      #{replyDate,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jy.infonet.entity.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="replyContent != null">
        reply_content,
      </if>
      <if test="replyDate != null">
        reply_date,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyContent != null">
        #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyDate != null">
        #{replyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jy.infonet.entity.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.replyId != null">
        reply_id = #{record.replyId,jdbcType=INTEGER},
      </if>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.replyContent != null">
        reply_content = #{record.replyContent,jdbcType=VARCHAR},
      </if>
      <if test="record.replyDate != null">
        reply_date = #{record.replyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set reply_id = #{record.replyId,jdbcType=INTEGER},
      comment_id = #{record.commentId,jdbcType=INTEGER},
      reply_content = #{record.replyContent,jdbcType=VARCHAR},
      reply_date = #{record.replyDate,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jy.infonet.entity.Reply">
    update reply
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyContent != null">
        reply_content = #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyDate != null">
        reply_date = #{replyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jy.infonet.entity.Reply">
    update reply
    set comment_id = #{commentId,jdbcType=INTEGER},
      reply_content = #{replyContent,jdbcType=VARCHAR},
      reply_date = #{replyDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
</mapper>