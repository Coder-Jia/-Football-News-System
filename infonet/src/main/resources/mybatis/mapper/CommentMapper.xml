<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.infonet.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.jy.infonet.entity.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="news_id" jdbcType="INTEGER" property="newsId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <result column="comment_like" jdbcType="INTEGER" property="commentLike" />
  </resultMap>
  <resultMap id="WithUserResultMap" type="com.jy.infonet.entity.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="news_id" jdbcType="INTEGER" property="newsId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_date" jdbcType="TIMESTAMP" property="commentDate" />
    <result column="comment_like" jdbcType="INTEGER" property="commentLike" />
    <association property="netuser" javaType="com.jy.infonet.entity.Netuser">
      <id property="userId" column="user_id" />
      <result property="userName" column="user_name"/>
      <result property="userSex" column="user_sex"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and c.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, news_id, user_id, comment_content, comment_date, comment_like
  </sql>
  <sql id="WithUser_Column_List">
    c.comment_id, c.news_id, c.user_id, c.comment_content, c.comment_date, c.comment_like,
    u.user_name,u.user_sex
  </sql>
  <select id="selectByExample" parameterType="com.jy.infonet.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithUser" parameterType="com.jy.infonet.entity.CommentExample" resultMap="WithUserResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithUser_Column_List" />
    from comment c
    left join netuser u on c.user_id=u.user_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <!--查询最热资讯-->
  <select id="selectByExampleWithReplyCount" parameterType="com.jy.infonet.entity.CommentExample" resultMap="WithUserResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithUser_Column_List" />
    from `comment` AS c LEFT OUTER JOIN `reply` AS r
    ON r.comment_id = c.comment_id
    LEFT OUTER JOIN netuser AS u
    on c.user_id = u.user_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    GROUP BY c.comment_id
    ORDER BY (COUNT(reply_id)+c.comment_like) desc,comment_date desc
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithUser" parameterType="java.lang.Integer" resultMap="WithUserResultMap">
    select
    <include refid="WithUser_Column_List" />
    from comment c
    left join netuser u on c.user_id=u.user_id
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jy.infonet.entity.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jy.infonet.entity.Comment">
    insert into comment (comment_id, news_id, user_id, 
      comment_content, comment_date, comment_like
      )
    values (#{commentId,jdbcType=INTEGER}, #{newsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentDate,jdbcType=TIMESTAMP}, #{commentLike,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jy.infonet.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="newsId != null">
        news_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentDate != null">
        comment_date,
      </if>
      <if test="commentLike != null">
        comment_like,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null">
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentDate != null">
        #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLike != null">
        #{commentLike,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jy.infonet.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.newsId != null">
        news_id = #{record.newsId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.commentContent != null">
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.commentDate != null">
        comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentLike != null">
        comment_like = #{record.commentLike,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      news_id = #{record.newsId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      comment_content = #{record.commentContent,jdbcType=VARCHAR},
      comment_date = #{record.commentDate,jdbcType=TIMESTAMP},
      comment_like = #{record.commentLike,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jy.infonet.entity.Comment">
    update comment
    <set>
      <if test="newsId != null">
        news_id = #{newsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentDate != null">
        comment_date = #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentLike != null">
        comment_like = #{commentLike,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jy.infonet.entity.Comment">
    update comment
    set news_id = #{newsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_date = #{commentDate,jdbcType=TIMESTAMP},
      comment_like = #{commentLike,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>